/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package modbuspal.master;

/**
 *
 * @author jmc15
 */
public class ModbusRequestDialog 
extends javax.swing.JDialog 
{
    private boolean isOK = false;

    /**
     * Creates new form ModbusRequestDialog
     */
    public ModbusRequestDialog() 
    {
        setModalityType(ModalityType.DOCUMENT_MODAL);
        initComponents();
    }

    
    ModbusMasterRequest getRequest()
    {
        if( actionSelectorTabbedPane.getSelectedComponent()==x03_readHoldingRegistersPanel )
        {
            int startingAddress = x03_startingAddressTextField.getInteger();
            int quantityOfRegisters = x03_quantityToReadTextField.getInteger();
            return ModbusMasterRequest.getReadHoldingRegistersRequest(startingAddress, quantityOfRegisters);
        }
        
        else if( actionSelectorTabbedPane.getSelectedComponent()==x10_writeHoldingRegistersPanel )
        {
            int startingAddress = x10_startingAddressTextField.getInteger();
            int quantityOfRegisters = x10_quantityToReadTextField.getInteger();
            return ModbusMasterRequest.getWriteMultipleRegistersRequest(startingAddress, quantityOfRegisters);
        }
        
        else if( actionSelectorTabbedPane.getSelectedComponent()==delayPanel )
        {
            int delayInMilliseconds = delayTextField.getInteger();
            return ModbusMasterDelay.getDelay(delayInMilliseconds);
        }
        
        return null;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        actionSelectorTabbedPane = new javax.swing.JTabbedPane();
        x03_readHoldingRegistersPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        x03_startingAddressTextField = new modbuspal.toolkit.NumericTextField();
        jLabel1 = new javax.swing.JLabel();
        x03_quantityToReadTextField = new modbuspal.toolkit.NumericTextField();
        x10_writeHoldingRegistersPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        x10_startingAddressTextField = new modbuspal.toolkit.NumericTextField();
        jLabel4 = new javax.swing.JLabel();
        x10_quantityToReadTextField = new modbuspal.toolkit.NumericTextField();
        delayPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        delayTextField = new modbuspal.toolkit.NumericTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        implementationComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Master Request");
        setMinimumSize(new java.awt.Dimension(300, 300));

        x03_readHoldingRegistersPanel.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Starting address:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 2, 2);
        x03_readHoldingRegistersPanel.add(jLabel2, gridBagConstraints);

        x03_startingAddressTextField.setColumns(5);
        x03_startingAddressTextField.setText("numericTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 2, 5);
        x03_readHoldingRegistersPanel.add(x03_startingAddressTextField, gridBagConstraints);

        jLabel1.setText("Quantity of registers :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 5, 2);
        x03_readHoldingRegistersPanel.add(jLabel1, gridBagConstraints);

        x03_quantityToReadTextField.setColumns(5);
        x03_quantityToReadTextField.setText("numericTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 5, 5);
        x03_readHoldingRegistersPanel.add(x03_quantityToReadTextField, gridBagConstraints);

        actionSelectorTabbedPane.addTab("Read Holding registers", x03_readHoldingRegistersPanel);

        x10_writeHoldingRegistersPanel.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Starting address:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 2, 2);
        x10_writeHoldingRegistersPanel.add(jLabel3, gridBagConstraints);

        x10_startingAddressTextField.setColumns(5);
        x10_startingAddressTextField.setText("numericTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 2, 5);
        x10_writeHoldingRegistersPanel.add(x10_startingAddressTextField, gridBagConstraints);

        jLabel4.setText("Quantity of registers :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 5, 2);
        x10_writeHoldingRegistersPanel.add(jLabel4, gridBagConstraints);

        x10_quantityToReadTextField.setColumns(5);
        x10_quantityToReadTextField.setText("numericTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 5, 5);
        x10_writeHoldingRegistersPanel.add(x10_quantityToReadTextField, gridBagConstraints);

        actionSelectorTabbedPane.addTab("Write Holding registers", x10_writeHoldingRegistersPanel);

        delayPanel.setLayout(new java.awt.GridBagLayout());

        jLabel8.setText("Delay:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 2, 2);
        delayPanel.add(jLabel8, gridBagConstraints);

        delayTextField.setColumns(5);
        delayTextField.setText("numericTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 2, 2, 5);
        delayPanel.add(delayTextField, gridBagConstraints);

        jLabel10.setText("ms");
        delayPanel.add(jLabel10, new java.awt.GridBagConstraints());

        actionSelectorTabbedPane.addTab("Delay", delayPanel);

        getContentPane().add(actionSelectorTabbedPane, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        jPanel1.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cancelButton);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jLabel5.setText("Retries:");
        jPanel2.add(jLabel5);

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
        jPanel2.add(jSpinner1);

        implementationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Modbus", "J-Bus" }));
        implementationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                implementationComboBoxActionPerformed(evt);
            }
        });
        jPanel2.add(implementationComboBox);

        jLabel6.setText("Receive timeout:");
        jPanel2.add(jLabel6);

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 60000, 1000));
        jPanel2.add(jSpinner2);

        jLabel7.setText("ms");
        jPanel2.add(jLabel7);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        isOK = false;
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        isOK = true;
        setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    private void implementationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_implementationComboBoxActionPerformed

        /*switch( implementationComboBox.getSelectedIndex() )
        {
            default:
            case 0: // modbus
            modbusSlave.setImplementation(IMPLEMENTATION_MODBUS);
            break;
            case 1: // J-Bus
            modbusSlave.setImplementation(IMPLEMENTATION_JBUS);
            break;
        }*/
    }//GEN-LAST:event_implementationComboBoxActionPerformed

    public boolean isOK()
    {
        return isOK;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane actionSelectorTabbedPane;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel delayPanel;
    private modbuspal.toolkit.NumericTextField delayTextField;
    private javax.swing.JComboBox implementationComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JButton okButton;
    private modbuspal.toolkit.NumericTextField x03_quantityToReadTextField;
    private javax.swing.JPanel x03_readHoldingRegistersPanel;
    private modbuspal.toolkit.NumericTextField x03_startingAddressTextField;
    private modbuspal.toolkit.NumericTextField x10_quantityToReadTextField;
    private modbuspal.toolkit.NumericTextField x10_startingAddressTextField;
    private javax.swing.JPanel x10_writeHoldingRegistersPanel;
    // End of variables declaration//GEN-END:variables
}
